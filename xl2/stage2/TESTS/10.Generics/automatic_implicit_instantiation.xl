// *****************************************************************************
// automatic_implicit_instantiation.xl                                XL project
// *****************************************************************************
//
// File description:
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2006,2015,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************
// Check that implicit instantiation works with "true" generic types
use XL.UI.CONSOLE

generic [type item]
function Ajouter(X, Y : item) return item is
    WriteLn "Ajouter X=", X, " Y=", Y
    return X + Y

Koba : integer := Ajouter(1, 2)
Kabo : integer := Ajouter(3, 4)
Kloztreon : real := Ajouter(6.12, 12.6)

generic type tablo

function Soustraire(X, Y : tablo) return tablo is
    WriteLn "Soustraire X=", X, " Y=", Y
    return Y - X

LKabo : integer := Soustraire(3, 5)
Kubi : integer := Soustraire(6,15)
Klonx : real := Soustraire(3.7, 2.9)
