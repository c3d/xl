// *****************************************************************************
// two-level-dereferences.xl                                          XL project
// *****************************************************************************
//
// File description:
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2007,2015,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************
use XL.POINTER
use XL.POINTER.ADDRESS
use XL.POINTER.MACHINE_ADDRESS
use XL.UI.CONSOLE

Ptr1, Ptr2, Ptr3, Ptr4 : pointer to integer

Ptr1 := nil
Ptr2 := Pointer(16#FF)
Ptr3 := Pointer(16#FFF)
Ptr4 := Pointer(16#FFFF)

Ptr1 := & (*Ptr1)
Ptr2 := Address(*Ptr2)
Ptr3 := & (Dereference(Ptr3))
Ptr4 := Address(Dereference Ptr4)

WriteLn "Ptr1=", Integer(Ptr1)
WriteLn "Ptr2=", Integer(Ptr2)
WriteLn "Ptr3=", Integer(Ptr3)
WriteLn "Ptr4=", Integer(Ptr4)


Ptr1 := * (&Ptr2)
Ptr2 := * (&Ptr3)
Ptr3 := * (&Ptr4)
Ptr4 := * (&Ptr1)

WriteLn "Ptr1=", Integer(Ptr1)
WriteLn "Ptr2=", Integer(Ptr2)
WriteLn "Ptr3=", Integer(Ptr3)
WriteLn "Ptr4=", Integer(Ptr4)

*(&Ptr1) := Ptr2
*(&Ptr2) := Ptr3
*(&Ptr3) := Ptr4
*(&Ptr4) := Ptr1

WriteLn "Ptr1=", Integer(Ptr1)
WriteLn "Ptr2=", Integer(Ptr2)
WriteLn "Ptr3=", Integer(Ptr3)
WriteLn "Ptr4=", Integer(Ptr4)

