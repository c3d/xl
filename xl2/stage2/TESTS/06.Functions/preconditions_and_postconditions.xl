// *****************************************************************************
// preconditions_and_postconditions.xl                                XL project
// *****************************************************************************
//
// File description:
//
//     Test if preconditions and postconditions work
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2005,2015,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

procedure precondition_error(file: text;
                             line: integer; column: integer
                             source : text) is
    postcondition_error file, line, column, source

procedure postcondition_error(file: text;
                              line: integer; column: integer
                              source : text) is
    precondition_error file, line, column, source

function Not (B : boolean) return boolean is XL.BYTECODE.not_bool
function EqualInt(A, B : integer)
    return boolean
    written A=B
    is XL.BYTECODE.equ_int
function MulInt(A, B : integer)
    return integer
    written A*B
    is XL.BYTECODE.mul_int
function SubInt(A, B : integer)
    return integer
    written A-B
    is XL.BYTECODE.sub_int
function GeInt(A, B : integer)
    return boolean
    written A>=B
    is XL.BYTECODE.ge_int
function GtInt(A, B : integer)
    return boolean
    written A>B is XL.BYTECODE.gt_int
function LtInt(A, B : integer)
    return boolean
    written A<B is XL.BYTECODE.lt_int
procedure CopyInt(out Tgt : integer; in Src : integer)
    written Tgt := Src is XL.BYTECODE.copy_int

function Factorial (N : integer)
    return integer
    written N!
    require N >= 0
    require N < 12
    ensure result > 0 is
        if N = 0 then
            return 1
        return N * (N-1)!

