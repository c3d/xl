// *****************************************************************************
// overload_resolution.xl                                             XL project
// *****************************************************************************
//
// File description:
//
//     Check that we can correctly resolve overloads for multiple functions
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2005,2015,2019, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

// Functions, that we use for simple overload resolution
function F(K : integer) return integer is
    return 1

function F(K : real) return integer is
    return 2

function F(K : text) return integer is
    return 3

function F(K, L : integer) return integer is
    return 4

function F(K : integer; L : real) return integer is
    return 5

// Checking overload resolution for written forms
function CopyInt(out Tgt : integer; in Src : integer) written Tgt := Src is
    XL.BYTECODE.CopyInt
function CopyInt(out Tgt : real; in Src : real) written Tgt := Src is
    XL.BYTECODE.CopyReal

// Testing it
to Test is
    A : integer := 1
    A := F(1)
    A := F(1.5)
    A := F("ABC")
    A := F(1, 2)
    A := F(1, 3.5)
    B : real := 3.5
    B := 5.1
    B := B

