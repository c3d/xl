// *****************************************************************************
// xl.plugin.listing.xl                                               XL project
// *****************************************************************************
//
// File description:
//
//     Plug-in to show a listing at a given phase
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2004,2007,2009,2015,2018-2020, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

import PT = XL.PARSER.TREE
import XLT = XL.TRANSLATOR
import RD = XL.RENDERER
import SYM = XL.SYMBOLS


module XL.PLUGIN.LISTING is
// ----------------------------------------------------------------------------
//    Encapsulating module (not really necessary)
// ----------------------------------------------------------------------------

    translation Listing
    // ------------------------------------------------------------------------
    //    Translations below a 'Listing' pragma
    // ------------------------------------------------------------------------

        when
           'Anything'
        then
           pragma : PT.tree := SYM.GetProperty(XLT.context, "PRAGMA")
           format : text := XLT.RuntimePath("xl.stylesheet")
           syntax : text := XLT.RuntimePath(XLT.syntax_file)
           translate pragma
               when ('Base' 'Style' 'Stx') where (Style.kind = PT.xlTEXT and
                                                  Stx.kind = PT.xlTEXT) then
                   style_name : Style as PT.text_tree
                   syntax_name : Stx as PT.text_tree
                   format := XLT.RuntimePath(style_name.value + ".stylesheet")
                   syntax := XLT.RuntimePath(syntax_name.value + ".syntax")

               when ('Base' 'Style') where Style.kind = PT.xlTEXT then
                   style_name : Style as PT.text_tree
                   format := XLT.RuntimePath(style_name.value + ".stylesheet")

           R : RD.renderer := RD.Open(format, syntax)
           RD.Render R, input
           RD.Close R
