// *****************************************************************************
// minimax_vararg_generic.xl                                          XL project
// *****************************************************************************
//
// File description:
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2006,2015,2019-2020, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************
// The quintessential XL test now passes :-)
use XL.UI.CONSOLE

generic type ordered where
    A, B : ordered
    Test : boolean := A < B

function Max (X : ordered) return ordered is
    return X

function Max (X : ordered; ...) return ordered is
    result := Max(...)
    if result < X then
        result := X

Test_integer : integer := Max(1, 2, 4, 6)
Test_real : real := Max (1.5, -2.6, 2.7, 8.41, 2.21)
Test_integer1 : integer := Max(1)
Test_real1 : real := Max (2.21)
Test_integer2 : integer := Max(1, 817)
Test_real2 : real := Max (2.21, 4.441e-3)

WriteLn "Integer = ", Test_integer
WriteLn "Real = ", Test_real
WriteLn "Integer1 = ", Test_integer1
WriteLn "Real1 = ", Test_real1
WriteLn "Integer2 = ", Test_integer2
WriteLn "Real2 = ", Test_real2
