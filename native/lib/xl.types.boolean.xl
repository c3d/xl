// *****************************************************************************
// xl.types.boolean.xl                                                XL project
// *****************************************************************************
//
// File description:
//
//     The basic boolean operations
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2018-2020, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

// Implementation of the boolean type
type boolean is either(false, true) with

    BitSize                                     is 1
    BitAlign                                    is 1

    with
        Target  : own boolean
        Value   : boolean
        Left    : boolean
        Right   : boolean


    // Implement the 'arithmetic' interface
    Left and Right              as integer      is builtin BAnd
    Left or  Right              as integer      is builtin BOr
    Left xor Right              as integer      is builtin BXor
    not Value                   as integer      is builtin BNot

    Target := Value             as nil          is builtin Copy
    Target :< Value             as nil          is builtin Copy

    Left  =  Right              as boolean      is builtin BCmpEQ
    Left <>  Right              as boolean      is builtin BCmpNE
    Left  >  Right              as boolean      is builtin BCmpGT
    Left >=  Right              as boolean      is builtin BCmpGE
    Left  <  Right              as boolean      is builtin BCmpLT
    Left <=  Right              as boolean      is builtin BCmpLE
