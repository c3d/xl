// *****************************************************************************
// 09-complex-arithmetic.xl                                           XL project
// *****************************************************************************
//
// File description:
//
//
//
//
//
//
//
//
// *****************************************************************************
// This software is licensed under the GNU General Public License v3+
// (C) 2015,2017-2020, Christophe de Dinechin <christophe@dinechin.org>
// *****************************************************************************
// This file is part of XL
//
// XL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// XL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with XL, in a file named COPYING.
// If not, see <https://www.gnu.org/licenses/>.
// *****************************************************************************

X,Y is self

complex is matching(re:real, im:real)
Z1:complex + Z2:complex is (Z1.re + Z2.re, Z1.im + Z2.im)
Z1:complex + Z2:real    is (Z1.re + Z2, Z1.im)
Z1:complex - Z2:complex is (Z1.re - Z2.re, Z1.im - Z2.im)
Z1:complex - Z2:real    is (Z1.re - Z2, Z1.im)
Z1:complex * Z2:real    is (Z1.re * Z2, Z1.im * Z2)
Z1:complex * Z2:complex is (Z1.re * Z2.re - Z1.im * Z2.im, Z1.re * Z2.im + Z1.im * Z2.re)
Z1:complex / Z2:real    is (Z1.re / Z2, Z1.im / Z2)
Z1:complex / Z2:complex is
    numer is (Z1.re*Z2.re + Z1.im*Z2.im, Z1.im*Z2.re - Z1.re*Z2.im)
    denom is Z2.re^2 + Z2.im^2
    numer / denom

write Z:complex       is write "(", Z.re, ",", Z.im, ")"
print T, C:complex    is print T, "(", C.re, ", ", C.im, ")"

print "(3,4) + (5,6)=", (3,4) + (5,6)
print "(3,4) - (5,6)=", (3,4) - (5,6)
print "(3,4) * (5,6)=", (3,4) * (5,6)
print "(3,4) / (5,6)=", (3,4) / (5,6)
